/*
 * DijkstraView.java
 */

package dijkstra;

import org.jdesktop.application.Action;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import javax.swing.JDialog;
import javax.swing.JFrame;

enum DrawType {
    NODES, EDGES, NODRAW
}

/**
 * The application's main frame.
 */
public class DijkstraView extends FrameView {

    public DijkstraView(SingleFrameApplication app) {
        super(app);
        initComponents();
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = DijkstraApp.getApplication().getMainFrame();
            aboutBox = new DijkstraAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        DijkstraApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        pnButton = new javax.swing.JPanel();
        btnNode = new javax.swing.JButton();
        btnEdge = new javax.swing.JButton();
        btnStart = new javax.swing.JButton();
        btnEnd = new javax.swing.JButton();
        btnStep = new javax.swing.JButton();
        btnSolve = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        /*
        pnGraph = new javax.swing.JPanel();
        */pnGraph = new paintPanel();
        pnSolution = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jSolution = new javax.swing.JTextArea();
        jTextStatus = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();

        mainPanel.setMinimumSize(new java.awt.Dimension(705, 330));
        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setPreferredSize(new java.awt.Dimension(705, 330));

        pnButton.setMinimumSize(new java.awt.Dimension(80, 330));
        pnButton.setName("pnButton"); // NOI18N
        pnButton.setPreferredSize(new java.awt.Dimension(80, 330));

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(dijkstra.DijkstraApp.class).getContext().getResourceMap(DijkstraView.class);
        btnNode.setText(resourceMap.getString("btnNode.text")); // NOI18N
        btnNode.setName("btnNode"); // NOI18N
        btnNode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNodeMouseClicked(evt);
            }
        });

        btnEdge.setText(resourceMap.getString("btnEdge.text")); // NOI18N
        btnEdge.setName("btnEdge"); // NOI18N
        btnEdge.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEdgeMouseClicked(evt);
            }
        });

        btnStart.setText(resourceMap.getString("btnStart.text")); // NOI18N
        btnStart.setName("btnStart"); // NOI18N
        btnStart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnStartMouseClicked(evt);
            }
        });

        btnEnd.setText(resourceMap.getString("btnEnd.text")); // NOI18N
        btnEnd.setName("btnEnd"); // NOI18N
        btnEnd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEndMouseClicked(evt);
            }
        });

        btnStep.setText(resourceMap.getString("btnStep.text")); // NOI18N
        btnStep.setName("btnStep"); // NOI18N
        btnStep.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnStepMouseClicked(evt);
            }
        });

        btnSolve.setText(resourceMap.getString("btnSolve.text")); // NOI18N
        btnSolve.setName("btnSolve"); // NOI18N
        btnSolve.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSolveMouseClicked(evt);
            }
        });

        btnClear.setText(resourceMap.getString("btnClear.text")); // NOI18N
        btnClear.setName("btnClear"); // NOI18N
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnButtonLayout = new javax.swing.GroupLayout(pnButton);
        pnButton.setLayout(pnButtonLayout);
        pnButtonLayout.setHorizontalGroup(
            pnButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnNode, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(btnSolve, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(btnStep, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(btnEnd, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(btnStart, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(btnEdge, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnButtonLayout.setVerticalGroup(
            pnButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnButtonLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btnNode, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnEdge, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnStart, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnEnd, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnStep, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnSolve, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(34, 34, 34))
        );

        pnGraph.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Graph", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP));
        pnGraph.setMinimumSize(new java.awt.Dimension(330, 330));
        pnGraph.setName("pnGraph"); // NOI18N
        pnGraph.setPreferredSize(new java.awt.Dimension(330, 330));
        pnGraph.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pnGraphMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout pnGraphLayout = new javax.swing.GroupLayout(pnGraph);
        pnGraph.setLayout(pnGraphLayout);
        pnGraphLayout.setHorizontalGroup(
            pnGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 318, Short.MAX_VALUE)
        );
        pnGraphLayout.setVerticalGroup(
            pnGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 302, Short.MAX_VALUE)
        );

        pnSolution.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Solution", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP));
        pnSolution.setMinimumSize(new java.awt.Dimension(280, 330));
        pnSolution.setName("pnSolution"); // NOI18N
        pnSolution.setPreferredSize(new java.awt.Dimension(280, 330));

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jSolution.setColumns(20);
        jSolution.setEditable(false);
        jSolution.setRows(5);
        jSolution.setEnabled(false);
        jSolution.setFocusable(false);
        jSolution.setName("jSolution"); // NOI18N
        jScrollPane1.setViewportView(jSolution);

        jTextStatus.setEditable(false);
        jTextStatus.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextStatus.setText(resourceMap.getString("jTextStatus.text")); // NOI18N
        jTextStatus.setAutoscrolls(false);
        jTextStatus.setBorder(null);
        jTextStatus.setName("jTextStatus"); // NOI18N

        javax.swing.GroupLayout pnSolutionLayout = new javax.swing.GroupLayout(pnSolution);
        pnSolution.setLayout(pnSolutionLayout);
        pnSolutionLayout.setHorizontalGroup(
            pnSolutionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnSolutionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
        );
        pnSolutionLayout.setVerticalGroup(
            pnSolutionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnSolutionLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(pnButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnGraph, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnSolution, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnButton, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
            .addComponent(pnGraph, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
            .addComponent(pnSolution, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(dijkstra.DijkstraApp.class).getContext().getActionMap(DijkstraView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNodeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNodeMouseClicked
	// TODO add your handling code here:
	this.jTextStatus.setText("Draw a node");
	this.drawType = DrawType.NODES;
	this.start = false;
	this.end = false;
    }//GEN-LAST:event_btnNodeMouseClicked

    private void btnEdgeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEdgeMouseClicked
	// TODO add your handling code here:
	this.jTextStatus.setText("Draw an edge");
	this.draw = false;
	this.drawType = DrawType.EDGES;
	this.start = false;
	this.end = false;
    }//GEN-LAST:event_btnEdgeMouseClicked

    private void btnStartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStartMouseClicked
	// TODO add your handling code here:
	this.drawType = DrawType.NODRAW;
	this.start = false;
	this.end = false;
	if (this.startNode != null) {
	    this.jTextStatus.setText("Starting node has been chosen");
	    return;
	}
	this.jTextStatus.setText("Choose starting node");
	this.start = true;
    }//GEN-LAST:event_btnStartMouseClicked

    private void btnEndMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEndMouseClicked
	// TODO add your handling code here:
	this.drawType = DrawType.NODRAW;
	this.start = false;
	this.end = false;
	if (this.endNode != null) {
	    this.jTextStatus.setText("Ending node has been chosen");
	    return;
	}
	this.jTextStatus.setText("Choose ending node");
	this.end = true;
    }//GEN-LAST:event_btnEndMouseClicked

    private void btnStepMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStepMouseClicked
	// TODO add your handling code here:
	this.drawType = DrawType.NODRAW;
	this.start = false;
	this.end = false;
    }//GEN-LAST:event_btnStepMouseClicked

    private void btnSolveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSolveMouseClicked
	// TODO add your handling code here:
	this.drawType = DrawType.NODRAW;
	this.start = false;
	this.end = false;
    }//GEN-LAST:event_btnSolveMouseClicked

    private void btnClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseClicked
	// TODO add your handling code here:
	this.clearAll();
    }//GEN-LAST:event_btnClearMouseClicked

    private void pnGraphMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnGraphMouseReleased
	// TODO add your handling code here:
	int x = 0;
	int y = 0;
	Node node = null;
	if (this.drawType != DrawType.NODRAW || this.start || this.end) {
	    x = evt.getX() - paintPanel.radius/2;
	    y = evt.getY() - paintPanel.radius/2;
	    if (x<0 || y<0) {
		this.jTextStatus.setText("Invalid position");
		this.drawType = DrawType.NODRAW;
		return;
	    }
	    node = this.pnGraph.checkInNode(x, y);
	    if (node != null)
		if (node.state != State.LABELED) {
		    if (this.start) {
			node.state = State.LABELED;
			this.startNode = node;
			this.jSolution.append("Starting node\t: Node " + Integer.toString(node.getData()) + "\n");
			this.start = false;
		    } else if (this.end) {
			this.endNode = node;
			this.jSolution.append("Ending node\t: Node " + Integer.toString(node.getData()) + "\n");
			this.end = false;
		    }
		    this.pnGraph.repaint();
		}
	}

	if (this.drawType == DrawType.NODES) {
	    if (node != null) {
		this.jTextStatus.setText("Concurred with another node");
	    } else {
		this.pnGraph.listNodes.add(new Node(x, y, this.numNodes, -1));
		this.pnGraph.repaint();
		this.numNodes++;
		this.jTextStatus.setText("");
	    }
	    this.drawType = DrawType.NODRAW;
	} else if (this.drawType == DrawType.EDGES){
	    if (node == null) {
		this.jTextStatus.setText("You must click on exist nodes");
		this.drawType = DrawType.NODRAW;
	    } else if (node == this.head) {
		this.jTextStatus.setText("You must choose another node");
	    } else {
		if (draw) {
		    Edge edge = new Edge(this.head, node, 10);
		    edge.edgeType = this.pnGraph.checkEdge(this.head, node);
		    this.pnGraph.listEdges.add(edge);
		    this.pnGraph.repaint();
		    this.head = null;
		    this.drawType = DrawType.NODRAW;
		    this.jTextStatus.setText("");
		    this.draw = false;
		} else {
		    this.head = node;
		    this.jTextStatus.setText("Choose tail node");
		    this.draw = true;
		}
	    }
	}
    }//GEN-LAST:event_pnGraphMouseReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnEdge;
    private javax.swing.JButton btnEnd;
    private javax.swing.JButton btnNode;
    private javax.swing.JButton btnSolve;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStep;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jSolution;
    private javax.swing.JTextField jTextStatus;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JPanel pnButton;
    /*
    private javax.swing.JPanel pnGraph;
    */private paintPanel pnGraph;
    private javax.swing.JPanel pnSolution;
    // End of variables declaration//GEN-END:variables

    private JDialog aboutBox;

    private boolean draw = false;
    private boolean start = false;
    private boolean end = false;
    private Node startNode = null;
    private Node endNode = null;
    private Node head = null;
    private DrawType drawType = DrawType.NODRAW;
    private int numNodes = 0;

    private void clearAll() {
	this.pnGraph.listNodes.clear();
	this.pnGraph.listEdges.clear();
	this.jTextStatus.setText("");
	this.pnGraph.repaint();
	this.pnSolution.repaint();
	this.draw = false;
	this.end = false;
	this.start = false;
	this.head = null;
	this.startNode = null;
	this.endNode = null;
	this.numNodes = 0;
	this.drawType = DrawType.NODRAW;
    }

}
